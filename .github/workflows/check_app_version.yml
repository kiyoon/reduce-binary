name: Build and release when new app version is out.
on:
  schedule:
    - cron: '0 10 * * *'

  workflow_dispatch:

jobs:
  get-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Fetch release version
        run: |
          latest_version=$(curl -sL https://api.github.com/repos/rlabduke/reduce/tags | jq -r ".[0].name")
          if [[ $latest_version != "null" ]]
          then
             echo "$latest_version" > release-versions/reduce-latest.txt
          fi
      - name: Check for modified files
        id: git-check
        run: echo modified="$([ -z "`git status --porcelain`" ] && echo "false" || echo "true")" >> $GITHUB_OUTPUT
      - name: Commit latest release version
        if: steps.git-check.outputs.modified == 'true'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git commit -am "New release version"
          git push

      - name: Build the Docker image
        if: steps.git-check.outputs.modified == 'true'
        id: build
        working-directory: .
        run: |
          REDUCE_RELEASE_TAG=$(cat release-versions/reduce-latest.txt)
          echo "REDUCE_RELEASE_TAG=$REDUCE_RELEASE_TAG" >> $GITHUB_OUTPUT
          docker build . -t reduce --build-arg REDUCE_RELEASE_TAG=$REDUCE_RELEASE_TAG
          docker create -ti --name reducecontainer reduce bash
          docker cp reducecontainer:/opt/build/reduce.appimage .
      - name: Create Release
        if: steps.git-check.outputs.modified == 'true'
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: True
          tag: ${{ steps.build.outputs.REDUCE_RELEASE_TAG }}
          name: ${{ steps.build.outputs.REDUCE_RELEASE_TAG }}
          prerelease: False
          artifacts: 'reduce.appimage'
          token: ${{ secrets.GITHUB_TOKEN }}
